{"version":3,"sources":["webpack://ant/webpack/universalModuleDefinition","webpack://ant/webpack/bootstrap","webpack://ant/./src/ant.ts","webpack://ant/./src/core/element.ts","webpack://ant/./src/core/eventDispatcher.ts","webpack://ant/./src/core/events.ts","webpack://ant/./src/index.ts","webpack://ant/./src/parsers/debug/debugClass.ts","webpack://ant/./src/parsers/debug/debugModule.ts","webpack://ant/./src/parsers/download/downloadClass.ts","webpack://ant/./src/parsers/download/downloadModule.ts","webpack://ant/./src/parsers/parserClass.ts","webpack://ant/./src/parsers/parsersModule.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ant\"] = factory();\n\telse\n\t\troot[\"ant\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import {AntEvents} from \"./core/events\";\nimport {AntElement} from \"./core/element\";\nimport {ParsersModule} from \"./parsers/parsersModule\"\n\n/**\n *represents the object 'Ant' that the end user will instantiate, when creating a 'new ANT', everything is initialized\n *\n * @export\n * @class Ant\n */\nexport class Ant {\n    /**\n     *to initialize ant events\n     *\n     * @type {AntEvents}\n     * @memberof Ant\n     */\n    events:AntEvents;\n    /**\n     *to initialize the ant hooks and parse Dom elements\n     *\n     * @type {AntElement}\n     * @memberof Ants\n     */\n    element:AntElement;\n    /**\n     *Creates an instance of Ant.\n     * @param {*} options \n     * @memberof Ant\n     */\n    constructor(options:any) {\n        this.element=new AntElement(this);\n        this.events=new AntEvents(this);\n        ParsersModule.initParsers(this);\n        this.events.onLoadDocument(()=>{\n            this.parseItems_onLoad();\n        });\n    }\n\n    /**\n     *call to start the parser of the DOM elements that have the attribute [ant-onload]\n     *\n     * @private\n     * @memberof Ant\n     */\n    private parseItems_onLoad(){\n        //TODO: parse elements with ant-onload, download data defined in options, etc.\n        let elementos=document.querySelectorAll('[ant-onload]');\n        elementos.forEach((ele)=>{\n            this.element.parse(ele);\n        });\n    }\n    \n\n    \n\n    \n}\n","import { Ant } from \"../ant\";\n\n/**\n *represent the object that initialize the ant hooks and parse Dom elements\n *\n * @export\n * @class AntElement\n */\nexport class AntElement {\n    /**\n     *Instance of the main Ant object\n     *\n     * @type {Ant}\n     * @memberof AntEvents\n     */\n    ant:Ant;\n    /**\n     * simple javascript object that stores all registered hooks in the Ant library\n     *\n     * @type {*}\n     * @memberof AntElement\n     */\n    hooks:any;\n    /**\n     *Creates an instance of AntElement.\n     * @param {Ant} ant\n     * @memberof AntElement\n     */\n    constructor(ant:Ant) {\n        this.ant=ant;\n        this.hooks={};\n    }\n    /**\n    * registers a new hook type and its function that initializes it\n    *\n    * @param {string} hook name of hook \\n e.g \"ant-debug\"\n    * @param {Function} cb \n    * @memberof AntElement\n    */\n    public registerHook(hook:string,cb:Function){\n        if (!this.hooks[hook]){\n            this.hooks[hook] = [];\n        }\n\n        this.hooks[hook].push(cb);\n    }\n\n    /**\n     * execute the function that initializes the parser of hook\n     *\n     * @param {string} hook name of hook \\n e.g \"ant-debug\"\n     * @param {Element} element \n     * @memberof AntElement\n     */\n    public callHook(hook:string,element:Element){\n        if (this.hooks && Object.keys(this.hooks).indexOf(hook) !== -1) { \n            for (var ix in this.hooks[hook]) { \n                this.hooks[hook][ix](element,this.ant);\n            }\n        }\n    }\n\n    /**\n     * search among all registered hooks, if that apply for this element\n     *\n     * @param {Element} element\n     * @memberof AntElement\n     */\n    public parse(element:Element){\n        for (var x in element.attributes) {\n            if (element.attributes[x].name && element.attributes[x].name.indexOf(\"ant-\") === 0) {\n                this.callHook (element.attributes[x].name, element);\n            }\n        }\n    }\n}","export type Handler<E> = (event: E) => void;\n\nexport class EventDispatcher<E> { \n    private handlers: Handler<E>[] = [];\n    fire(event: E) { \n        for (let h of this.handlers)\n            h(event);\n    }\n    register(handler: Handler<E>) { \n        this.handlers.push(handler);\n    }\n}","import { Ant } from \"../ant\";\nimport { EventDispatcher, Handler } from \"./eventDispatcher\"\n/**\n *represents the object that contains the events and properties required for Ant\n *\n * @export\n * @class AntEvents\n */\nexport class AntEvents {\n    /**\n     *Instance of the main Ant object\n     *\n     * @type {Ant}\n     * @memberof AntEvents\n     */\n    ant: Ant;\n\n    /**\n     *dispatcher of the ReadyDocumentEvent\n     *\n     * @private\n     * @memberof AntEvents\n     */\n    private readyDocumentDispatcher = new EventDispatcher<ReadyDocumentEvent>();\n\n    /**\n     *Creates an instance of AntEvents.\n     * @param {Ant} ant\n     * @memberof AntEvents\n     */\n    constructor(ant: Ant) {\n        this.ant = ant;\n        this.initListenReadyDocument();\n    }\n    /**\n     *start listening to the DOMContentLoaded event\n     *\n     * @private\n     * @memberof AntEvents\n     */\n    private initListenReadyDocument() {\n        let th1 = this;\n        document.addEventListener(\"DOMContentLoaded\", function () {\n            th1.readyDocumentDispatcher.fire({})\n        }, false);\n    }\n\n    \n    /**\n     * Rewritable function from the AntEvent instance\\n   \n     * for example\\n\\n\n     * 'let antEvent=new AntEvent(antInstance);\n     *  antevent.onLoadDocument(()=>{ //code here...});'\n     * \n     * @param {Handler<ReadyDocumentEvent>} handler Promise function to call when the event is fulfilled\n     * @memberof AntEvents\n     */\n    public onLoadDocument(handler: Handler<ReadyDocumentEvent>) {\n        this.readyDocumentDispatcher.register(handler);\n    }\n}\n\n/**\n * represents the structure of the event parameter\n *\n * @interface ReadyDocumentEvent\n */\ninterface ReadyDocumentEvent { }","import {Ant} from \"./ant\";\nexport  {Ant};","import { Parser } from \"../parserClass\";\nimport { Ant } from \"../../ant\";\n/**\n *represent the element with hook named \"ant-debug\"\n *\n * @export\n * @class DebugElement\n * @extends {Parser}\n */\nexport class DebugElement extends Parser {\n    /**\n     *the message to show in debug\n     *\n     * @type {*}\n     * @memberof DebugElement\n     */\n    public message: any;\n\n    /**\n     *Creates an instance of DebugElement.\n     * @param {Element} element HtmlElement\n     * @param {Ant} ant instance of ant main object\n     * @memberof DebugElement\n     */\n    constructor(element:Element,ant:Ant) {\n        super(element,ant)\n        this.message=this.element.getAttribute('ant-debug');\n        console.log(\"ANT-DEBUG[\"+this.message+\"]\");\n    }\n}","import {DebugElement} from \"./debugClass\"\nimport { Ant } from \"../../ant\";\n\nexport module DebugModule{\n\n    export let nameHook=\"ant-debug\";\n    \n    /**\n     * initialize the element with hook named \"ant-debug\"\n     *\n     * @export\n     * @param {Element} element\n     * @param {Ant} ant\n     */\n    export function init(element:Element,ant:Ant){\n        let debug=new DebugElement(element,ant);\n    }\n    \n}","import { Parser } from \"../parserClass\";\nimport { Ant } from \"../../ant\";\n\n/**\n *represent the element with hook named \"ant-download\"\n *\n * @export\n * @class DownloadElement\n * @extends {Parser}\n */\nexport class DownloadElement extends Parser{\n    /**\n     *URL of data\n     *\n     * @type {*}\n     * @memberof DownloadElement\n     */\n    public url:any;\n    /**\n     *attribute to parse on succes data\n     *\n     * @type {*}\n     * @memberof DownloadElement\n     */\n    public onSuccess:any;\n    /**\n     *format of the data : \\n geojson,json,csv, etc\n     *\n     * @type {string}\n     * @memberof DownloadElement\n     */\n    public format:string=\"json\";\n    /**\n     * Creates an instance of DownloadElement.\n     * @param {Element} element HtmlElement\n     * @param {Ant} ant instance of ant main object\n     * @memberof DownloadElement\n     */\n    constructor(element:Element,ant:Ant) {\n        super(element,ant,\"ant-download\");\n        this.url=this.element.getAttribute(this.nameHook);\n        this.format=(this.element.getAttribute(this.nameHook+\"_format\") == null )?\"json\":<string>(this.element.getAttribute(this.nameHook+\"_format\"));\n        this.onSuccess=this.element.getAttribute(this.nameHook+\"_success\");\n        this.loadData();\n    }\n    /**\n     * send xhr request\n     *\n     * @private\n     * @memberof DownloadElement\n     */\n    private loadData(){\n        let req=new XMLHttpRequest();\n        let th1=this;\n        req.open(\"GET\",this.url,true);\n        req.onreadystatechange=function(){\n            //on load all\n            if(req.readyState==4){\n                if(req.status==200){\n                    //parse the elements\n                    let elementos=document.querySelectorAll(th1.onSuccess);\n                    elementos.forEach((ele)=>{\n                        th1.ant.element.parse(ele);\n                    });\n                    console.log(req.responseText);\n                }else{\n                    console.warn(\"error on XMLHttpRequest \"+th1.url);\n                }\n            }\n        }\n        req.send(null);\n    }\n}","import { DownloadElement } from \"./downloadClass\"\nimport { Ant } from \"../../ant\";\n\n/**\n * Modulo que contiene la inicializacion del parser Download\n */\nexport module DownloadModule {\n    \n    export let nameHook = \"ant-download\";\n    /**\n     * initialize the element with hook named \"ant-download\"\n     *\n     * @export\n     * @param {Element} element\n     * @param {Ant} ant\n     */\n    export function init(element: Element, ant: Ant) {\n        let debug = new DownloadElement(element, ant);\n    }\n\n}","import { Ant } from \"../ant\";\n\n/**\n * superclass that generalize Parser functions and properties  \n *\n * @export\n * @class Parser\n */\nexport class Parser {\n    /**\n     * instance of ant object\n     *\n     * @type {Ant}\n     * @memberof Parser\n     */\n    public ant:Ant;\n\n    /**\n     * the HtmlElement\n     *\n     * @type {Element}\n     * @memberof Parser\n     */\n    public element:Element;\n\n    /**\n     * identifier if element contains name-hook_id attribute\n     *\n     * @type {string}\n     * @memberof Parser\n     */\n    public id:string=\"\";\n\n    /**\n     *name of main hook of the element\n     *\n     * @type {string}\n     * @memberof Parser\n     */\n    public nameHook:string;\n    /**\n     *Creates an instance of Parser.\n     * @param {Element} element HtmlElement\n     * @param {Ant} ant instance  of Ant object\n     * @param {string} [nameHook=\"ant\"]\n     * @memberof Parser\n     */\n    constructor(element:Element,ant:Ant, nameHook:string=\"ant\") {\n        this.ant=ant;\n        this.element=element;\n        this.nameHook=nameHook;\n        //verificar si tiene id el elemento\n        if(this.element.getAttribute(nameHook+\"_id\") != null){\n            this.id=<string>(this.element.getAttribute(nameHook+\"_id\"));\n        }\n    }\n\n    public static storeInAnt(parser:Parser){\n        // can be saved in the ant scope if contains id\n    }\n\n}","import { DebugModule } from \"./debug/debugModule\";\nimport { DownloadModule } from \"./download/downloadModule\";\nimport { Ant } from \"../ant\";\n\n\nexport module ParsersModule{\n    /**\n     *initialize all parsers\n     *\n     * @export\n     * @param {Ant} ant instance of Ant object\n     */\n    export function initParsers(ant:Ant){\n        ant.element.registerHook(DebugModule.nameHook,DebugModule.init,);\n        ant.element.registerHook(DownloadModule.nameHook,DownloadModule.init);\n    }\n}\n\n"],"sourceRoot":""}